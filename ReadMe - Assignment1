coding  conventions used: Google Java Style (https://google.github.io/styleguide/javaguide.html)

I am using my own set of classes, fields, methods, here to lay the foundation for the game,
according to my thinking pattern and assignment 01, my only concern is game rules.


flogschema package:

   defines game rules, scoring machanism

enum Consonants: represent consonants
enum Vowels: represents vowels
enum PenaltyOptions: represent damage ratios give to every weakest player based on the option
                     they selected out of 3 options.
FlogGame class: 
                 used as a parent class in hierachy, will place common methods, fields that are common
                 sub classes here with more implementation and architecture improvement.



class LetterBag extends FlogGame
	
	
	public char[] give10letters()
					
		
	public void simulateScrabbleLetterBag()
		simulate scrabble letter bag
	
	public char[] giveFirst2Letters()
		randomly generate first 2 characters
		
	public char exchangeLetters(char exchangeLetter)
		facilitate to exchange letters currently user have
	
	public boolean checkForVowel(char exchangeLetter)
		check whether exchange letter is a vowel
		
	public char giveConsonant()
		provide a random consonant
	
	public char giveVowel()
		provide a random vowel


public class WordBag extends LetterBag:


	public void buildWordBag()		
		 initialization the tree with local dictionary file
	
	public boolean verifyFirstTwoLetters()	
		traverse the tree with first 2 characters in-order to find whether there are valid words
		
	public boolean isCompleteWord(char[] word)
		check whether the input word is valid complete word.
		
	
	public char[] findLongestWord(char[] currentCharSequence)
		automatic method to find the longest word
		
	public boolean verifyInputWord(char[] inputWord)	
		 verify word existence
	
	

public class WordBoard extends WordBag:
	
	public void initialSetup():
		initialize the board with first 2 letters, user 10 letters, powers(multiply letter value if placed on it)

	public void placePowersOnTheWordBoard()
		place powers randomly on the board

		
	public void placeFirst2Letters()
		place first 2 letters on the board

		
	public int[] randomizePowerPositions()
		place powers randomly on the board(row)		

		
	public char findPlacedLetterDirection()
		find whether the words are place horizontally or vertically
		
	
		

public class Scorer extends WordBag 

	public static boolean isRoundEnd()
		check whether the round is end, after user testing confirming the submit


	public static void setRoundEnd(boolean roundEnd)

	public void calculateTotalScore()
		calculate the total score for all players
	
	public double calculatePenalty(int selectedPenaltyOption) 
		calculate penalty based on the option choosed

	public double calculateScoreForValidWord()
		calculate partial words and 12 letter words
		
	public double calculate12LetterWordScore()
		calculate score for 12 letter words
		
	public double calculateLetterScores() 
		use enum Consonants and enum Vowel values to calculate
		partial word score
			
	public void addPowerBonus()
		calculate power bonus by moving along the 3D array
		
	
	public double[] randomizePaneltyOptions()
		shuffling the penalty options, give to weakest players
		 using random numbers
		
	
	public void addWordLengthBonus()	
		

		
		
		
 
                 
